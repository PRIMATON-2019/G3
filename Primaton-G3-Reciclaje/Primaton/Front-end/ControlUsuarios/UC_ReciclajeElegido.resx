<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAADdFJREFUeF7tnQtwVNUZx4GqtdZXnU6n09rRVmunmRFlkt2A2q6F3LsLyd4FLCBa
        BatoFR8oiKIIREcFEcEHBBTEBgiCoIiILxRLeFgeRUVFQcVWkLfhkYSAJKfft/m+mxO4gd3N7t27m+83
        8x+Yzd5zvvP/n9zHZs+9rQRBEARBEOKktc+0rvYHrWWgyvxgRIncE3qO3mMGmEV9JO7RBjoucypM5L4w
        C8ykPhoX8BnhB5wKEaVRkAnFk1raGsZP/aa1nzse8dBAtXPjLKV2vSZyUeg5es85YCaYDcWUOnwFkSB3
        +tc+16gftr/qWKAo9ULvMQPOwxeMBCmm1AG7/z7c4dARdzoWJnJPmIE9ASAbiil1yB7AO0rLHkDOAbwh
        188BYPcyAq47D3CHIm8KJkINZkWxJQ8JP3OEk4BiSx5OHYm8K4oteeiNq5daiTyowm5m6iYAHAJ+4MYP
        vtjGsQBRemVYnaP5YFYUW/KA48oungCbp5ziWIAofaqZ2QayseonAGRFsSWPfNNawRNgyeO/dCxClD59
        NuHMaDZRQVYUW/Lwm+Ex3EHxre0cixClT0/fnWNPAMyKYkseeWbkEu4gUFiotr1wsmMhIve1d/qJyrRC
        9gTArCi25OI3Ix9wJ/ffnKfqHIoRua9RA9ra4WNGFFfy8XUq6gAnGHXcWenQ8x0LErmnVx46B7KwT/7q
        MCOKKzXA8aWEJ0B76HjykAtU7Wzn4kSpUx14PmPYeapDKBzNon4ChEsoptQRCARO8BvW29wpqv91l6j1
        JWc4FipKvr6cdJq684Z8238UZoLZUEypxe8PnQ4dvqEXgLshnAgvDv+d+hwmw+7Sk2TPkAThb3rFtJPU
        homnqznF56o7rm8f3fPq3mMW/lDodIrHNdpA58Vw3LE/IRS5K/K+GLOojyQN5BcU/t5vRKZDMYePLFCU
        GqHX6Dl6TzGkH7j2/A2chAzwGdYr/qC1EVSJZ6VOAxDFLvQw6iV4GvUWPEavyXYhFnRD57237JjS30ub
        C5mOHqpT6Lr099LmQqajh+oUui79vbS5kOnooTqFrkt/L20uZDp6qE6h69LfS5sLmY4eqlPouvT30uZC
        pqOH6hS6Lv29tLmQ6eihOoWuS38vbS5kOnqoTqHr0t9LmwuZjh6qU+i69PfS5kIqyDHNs/KMolv8pjUL
        tAFUAarVA8hG4RhB3/sNaz38Ow1X9ObmFp1CtmQ/OYEep+Yb1mgYvCw1I4EXe/xGeEhOTs5JZFN2kvuX
        rufBYL9wMkEUnQhr2hVYvyK7sgscmN+MbNEH3OfWu9RL819XG7/epPbu269qa2tVtlNXV6f2V1aqL778
        Ws2et0Bd27/hBg8omASb2hrGL8i2rKE1DKycB3l5pJd6Y9HiqBktHfRgwdvvqj9bPfRJ8D56Vm9dFpBn
        Rnrx4C4tvEKt+WgdDV9g1n78iboMvGGf6P5/2QEMxl5W9ty0mTRk4Uimls22JwDsBT4h+zIbOLv9LQwm
        +s2gjt16q8qqahqucCTVBw6AR1c27AWMLheTjZkLXuvzgIaPeoKGKjTFMPCoYQJYQ8nGzAW/x8YDWggn
        fsKxwZNj9otOBjOYHj1+BIOo4AHt2v09DVNoCvRImwAHcwKBU8nNzMMXLOrAg7nqpttpiMLxQK/sSRC0
        CsnOzANm8DAeyLhJU2h4wvFAr+wJYIbHkZ2ZB1z+LeGBLF+5moYnHI/lK9doEyBDLwf/cIl1GhR/CAeB
        H3DgJY4QG+gVfygEHtZd1LHw12Rr5gCXf2GexTfffT8NTYgV9Iz9c+Um0MnGb0ae5AFMnfkSDUuIFfSM
        /fMb4elka+YAu67PeACffr6BhiXECnrG/uWb1lawNHP+OOQPhM7GYxcWb1xxdYv4M2+yQc/QO3sShMJt
        yV7vA8esvlz4kIdG0ZCEeEHv2EefGR5I9noff9CawYW//PqbNBwhXtA79hH2qG+SvZ6nNZwAbuPCN3+3
        lYYjxAt61zABIlXnh0I/Jo+9i98svIiL7t73JhqKkCjooT0JjHBHstm7wEwdxAWPfHICDUNIFPRQmwCP
        ks3exWdab3HB75Yvo2EIiYIesp9wObiabPYm5wQCJ+fDsQqL7RDqGv2mr9A80EP0Ej2FE8Ha3EDRz8lu
        7+ErKOrEs/W62wfREITmgl6yr75guCfZ7T38hjWSCy2ZOo3KF5oLesm+wl7gObLbe+QHrdVcaDxf/X62
        tExdVtTwlehsF44Vxxwr6CVvCxPgG7LbW+CxCY9RWGQg0lMdOnSIyj8+LSl8Fo45VtBL9JS39XXqfAHZ
        7h30xR8DhhZT6bHB27U0xQN6am9rRG4h270DHpu4wLK5r1LZsWEPDHTvuMlZLX2s8YCe8nb4TWuy3Tvg
        sYkL/HLTN1R2bPB2KCfTskn6WOMBPeXt/EFrTyu3bg0fC3hM4uK69O4b96JP3hblZFo2SR9rPKCn6C1v
        m7LnAiUCXP7158KGPzaWSo4d3hblZFo2SR9rvIwAb3lb2OMOJ/vTj776p7lyMi2b5DTmRAQToJzsTzP1
        q3/2OBWZiJxMyyY5jTkhmdYh/OY1pZA+8swu9vMEkyEn07JJTmNOVHkFlkUxpA/47bdX/4wtmUxHq/jQ
        B+VkWjZJH2sijJ3Y0AYcep+mGNIHHou4oKX/XkVlxgdvj3IyLZukjzURloHHvD1cDq6nGNKDvvoHb/1S
        VZ3Y6h8eEMrJtGySPtZEqAaP0etoG6ZVl9bHx+QZEXv1zz8G3Uclxg+3gXIyLZukjzVR0GtuA34B/05x
        uA9c/z/FhTxfNovKix9uo6UpUdBrbsNvhmdSHO6DtzvlQj5Z/wWVFz/y18D4QK+5HdgD7IAo3F81pK/+
        KbjiKnX48GEqL37k+wDxgV6j59xeXierHcXiHnmmdR0XcM+Dj1Jpglug5+y/PxgeTLG4h8+0yriAuQve
        oLIEt0DP7QlgRt6hWFwDb/26nQv4dst3VJbgFuh5wwSwqs9u3/4nlE3q8RmRi7nzbn36UUmC23Trc6M9
        CfLNsEHxpB44+7+bO35k3HgqR3Ab9J5z8Jnhxyie1KOv/lm0ZCmVI7gNes85wGFgLcWTWnD1Dx5zsNP2
        oa5qz959VI7gNug9ZkAToNaV5wzANWcBz7q+tw2kUoR0gRlwHnA52JtiSh3+YMPqnwnPl1IZQrrADBom
        QOR5iil1wK5mDXe46sOPqQwhXWAGnEe+aX1LMaWGRqt/rJ7qYByrf9wCV9E8+exU1X/wULV42Qp69Wj+
        u3mLuqf4UTUYhP9visVLV6j+9zygniiZrA7U1NCr3gEzwCx4ErQr6PJHiiv56Kt/7rhvBJXgLWa+PN82
        A++2WbFnL/2kMTcNHGK/r6kbWVbs3dvobxQz5syjn3iLO+4fYdfoMyO3UVzJBy7/JnvdjEmlZbYZqK3b
        d9BPGqM/reuamwfQq43ZtmNno7YmvjCdfuItMAuuEfbQ8ymu5AON26t/Nn61ibr3FnhphL/R+HiaydNf
        pFePZu26T1XXa/sp62/Xq1VrP6JXj6Z09lzVqXtv1e+ue9Xuigp61VtgFg0TILIvNzf3RIoseeirfzpf
        2Uce+eYhMAvMxJ4EwcI/UWzJQ1/9M2ykPPvHa2AmnA+omGJLHnD8n8cd4IMOBW+BmXA+cKheTrEliUDg
        BGjUXv2zfecu6lbwCpiJPQGC1g+5BQVnUHrNB1eicuNX9ruVuhS8BmbDOfkMqxvF13zgt384NzxmwnPU
        neA1MBvOCTIbT/E1H2jMXv1T/sFK6s674FlxVfXxn1CKn6LF8mkmtpUJVz2YjTYBNlB8zQNX/+BKVGz0
        0i7dVZXHH/26fedO1fP6W6ImjHqqpMngFv1rafQjVNS7S5q+oym2gW3hPXu3bN1Gr3oTnKiYEU8C0LkU
        Y+LgClRuED8+9Trjtb+OoZq6W7l+vOx94230amP0u3WjnpnyT/qJd9E/4oYrt34UY+Loq3+mHOOTNa8w
        b+FbtgGXR3qpffsr6SeNGTT8Yft9dw59kF5tTGVVlerYvbf9vjmvLaSfeBfMiOuFw8BsijFxcAUqN/jx
        Z59TN94FH7UyY84ratjIMdGPe5vi+4o9avT4Seqxpyeqnbt306tHsw7GjA90Lp01t1mLX9wCM+K84NC9
        CyJsU59kAuDKU5hF0dU/+Hl4JhjQ0sGMMCueBL4CK4/ijB+YQfbqn8HFj1AXgtfBrDg3vxEeQnHGj776
        Z8587x//hHowK84t3wi/R3HGTWs4/turf/53jG/NCN4Cs+Lc4BBek5tbdAplGjv66p/INTdQ00KmgJlx
        fj4zHKJYY0df/fPw2GeoWSFTwMw4P78ZHkOxxg7sOhZyA++8X07NCpkCZtYwARJYNQS7jQXcQPkHid39
        S0gfmFnDBAivolhjJ9+wRnMDidz/V0gvxaPH2RPAZ4SnUKyxk1sQuRBvQ4YNtA9F1NuLl1DTgtd5r3y5
        vWYQlWuEL6VY4wMmQCk3gg3i16KrDyR2L0Ah9dTUHIx+E7pD5252+HApP4fijB/8WpHPsD7kxlChXtdG
        V8ksX7k6+jUkL64Oaimg9zt27VYrVv9HPfXsVFWoPU8ABSd/63JM8yyKMzEuCkTOxHvQ6A2LvC8If9GF
        lxX+jGJsPnAi0Rca/cqpM5F3hBnhHdwotqTT2lcQCeIHC9DRctBm0AGnQkSpF3pPGUAW4TGYDWSU+J9/
        BUEQBEFoIbRq9X/SOUZxGQNyOwAAAABJRU5ErkJggg==
</value>
  </data>
</root>